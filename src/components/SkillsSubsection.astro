---
import { Image } from 'astro:assets';

interface Props {
	title: string;
    stack: Array<string>
}

const {title, stack} = Astro.props;
---

<div class="border rounded-xl w-4/5 sm:w-2/3 p-2 m-8 bg-slate-900 skew-x-0 sm:skew-x-12 hide">
    <p class="text-xl font-bold mb-2 border-b -skew-x-0 sm:-skew-x-12">{title}</p>
    <div class="flex justify-evenly items-center w-full flex-wrap -skew-x-0 sm:-skew-x-12">
        {stack.map((tech) => (
			<div class="flex flex-col justify-end width-100 [&>*]:m-auto">
				<Image src={"/icons/"+tech+".svg"} alt={tech} width={60} height={60} title={tech} />
				<b>{tech}</b>
			</div>
        ))}
    </div>
</div>

<style>
	.width-100 {
		width: 100px;
	}

	.hide {
		opacity: 0;
		/* transform: translateX(-100%); */
		margin-left: -100%;
		transition: all 1s;
	}

	.show {
		opacity: 1;
		/* transform: translateX(0); */
		margin-left: 32px;
		transition: all 1.5s;
	}
</style>

<script>

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add("show")
			}
			// else {
			// 	entry.target.classList.remove("show")
			// }
		})
	})
	const hiddenElements = document.querySelectorAll(".hide");
	hiddenElements.forEach((el) => observer.observe(el))

</script>